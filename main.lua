local lurker = require 'Utilities.lurker.lurker'local Car = require 'Tests.Car'function love.load()	local Ford = Car( 'Ford' )	Ford:speak() -- I am a car named "Ford!"	Ford:setState( 'Running' ) -- States can be accessed by string outside of local scope.	Ford:speak() -- I am a running car named "Ford!"	Ford:setState( 'Broken' )	Ford:speak() -- I am a broken car named "Ford!" :(	Ford:stop() -- I am broken and therefore already stopped.	Ford:popState()	Ford:stop() -- STOP STOP STOP!	Ford:popState()	Ford:stop() -- Stopping the car!	Ford:crash() -- This is an example of a fallback. Only the main class has this.	Ford:setState( 'Running' )	Ford:crash() -- This is an example of a fallback. Only the main class has this.	Ford:setState( 'Broken' )	Ford:crash() -- This is an example of a fallback. Only the main class has this.endfunction love.update( dt )	lurker.update()endfunction love.draw()endfunction love.mousepressed( x, y, Button )endfunction love.mousereleased( x, y, Button )endfunction love.keypressed( Key, IsRepeat )endfunction love.keyreleased( Key, IsRepeat )	if Key == 'escape' then love.event.quit() endendfunction love.quit()end